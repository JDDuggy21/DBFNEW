{"version":3,"sources":["utils/callHelpers.ts","hooks/useHarvest.ts","components/Input/Input.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/TokenInput/TokenInput.tsx","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","hooks/useApprove.ts","hooks/useUnstake.ts","components/Tags.tsx","hooks/useBlock.ts","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Oceans.tsx"],"names":["approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","smartStake","smartChefContract","smartStakeBnb","value","unstake","withdraw","smartChefUnstake","emergencyWithdraw","harvest","smartHarvest","sousChefContract","smartHarvestBnb","useHarvest","farmPid","dispatch","useDispatch","useWallet","useMasterchef","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useHarvest3","masterChef3Contract","useMasterchef3","fetchFarm3UserDataAsync","useAllHarvest3","useSmartChefHarvest","sousId","isUsingBnb","useSmartChef","handleHarvest","harvestFn","updateUserPendingReward","updateUserBalance","StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledSpacer","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","burnFee","TranslateString","useI18n","console","log","toLocaleString","onClick","useStake3","onStake","info","useSmartStake","handleStake","stakeFn","updateUserStakedBalance","String","useStake","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","useApprove","onApprove","useApprove3","useSousApprove","updateUserAllowance","useUnstake3","onUnstake","useSmartUnstake","useUnstake","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useBlock","BlockContext","CardTitle","isFinished","Card","card","background","isActive","Balance","text","Label","textSubtle","DetailPlaceholder","Value","Footer","isDark","Coming","style","padding","src","width","height","alt","as","fullWidth","mb","alert","flex","role","aria-label","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","fontSize","decimals","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","burnFeeBP","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","getBalanceNumber","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","process","block","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","earnings","pendingReward","Math","isOldSyrup","QuoteToken","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentWithdraw","handleApprove","error","display","alignItems","HarvestButton","UnlockButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","priceToBnb","tokenPrice","quoteToken","tokenPriceBN","BUSD","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","DBALL","tokenPriceVsQuote","quoteTokenSymbol","totalRewardPricePerYear","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/9.306a6fda.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const smartStake = async (smartChefContract, amount, account) =>\n  smartChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => tx.transactionHash)\n\nexport const smartStakeBnb = async (smartChefContract, amount, account) =>\n  smartChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => tx.transactionHash)\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const smartChefUnstake = async (smartChefContract, amount, account) => {\n  // buggy CTC\n  if (smartChefContract.options.address === '0x85f27A63cFb4Dc5a36d7Eb5EF8620D343817e156') {\n    smartChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => tx.transactionHash)\n  } else {\n    smartChefContract.methods\n      .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => tx.transactionHash)\n  }\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => tx.transactionHash)\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => tx.transactionHash)\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => tx.transactionHash)\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) =>\n  sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => tx.transactionHash)\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const smartHarvest = async (sousChefContract, account) =>\n  sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => tx.transactionHash)\n\nexport const smartHarvestBnb = async (sousChefContract, account) =>\n  sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => tx.transactionHash)","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, fetchFarm3UserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { smartHarvest, smartHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useMasterchef3, useSmartChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\n\nexport const useHarvest3 = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChef3Contract = useMasterchef3()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChef3Contract, farmPid, account)\n    dispatch(fetchFarm3UserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChef3Contract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest3 = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChef3Contract = useMasterchef3()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChef3Contract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChef3Contract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSmartChefHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const smartChefContract = useSmartChef(sousId)\n\n  const handleHarvest = useCallback(async () => {\n    const harvestFn = isUsingBnb ? smartHarvestBnb : smartHarvest\n    await harvestFn(smartChefContract, account)\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, smartChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n  unstakingFeeBP?: number\n  burnFee?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  depositFeeBP = 0,\n  // unstakingFeeBP = 0,\n  burnFee = 0,\n}) => {\n  const TranslateString = useI18n()\n  console.log(\"burn1\",burnFee)\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n      {burnFee > 0 ? (\n        <StyledMaxText>\n          {TranslateString(1000100, 'burn Fee')}: {new BigNumber(value || 0).times(burnFee / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n      {/* {unstakingFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10011, 'Unstaking Fee')}:{' '}\n          {new BigNumber(value || 0).times(unstakingFeeBP / 10000).toString()} {symbol}\n        </StyledMaxText>\n      ) : null} */}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, fetchFarm3UserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, smartStakeBnb, smartStake } from 'utils/callHelpers'\nimport { useMasterchef, useMasterchef3, useSmartChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useStake3 = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChef3Contract = useMasterchef3()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChef3Contract, pid, amount, account)\n      dispatch(fetchFarm3UserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChef3Contract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSmartStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const smartChefContract = useSmartChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const stakeFn = isUsingBnb ? smartStakeBnb : smartStake\n      await stakeFn(smartChefContract, amount, account)\n      dispatch(updateUserStakedBalance(String(sousId), account))\n      dispatch(updateUserBalance(String(sousId), account))\n    },\n    [account, dispatch, isUsingBnb, smartChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync, fetchFarm3UserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useMasterchef3, useCake, useLottery, useSmartChef } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Farm3\nexport const useApprove3 = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChef3Contract = useMasterchef3()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChef3Contract, account)\n      dispatch(fetchFarm3UserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChef3Contract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId: number) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const smartChefContract = useSmartChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, smartChefContract, account)\n      dispatch(updateUserAllowance(String(sousId), account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, smartChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  fetchFarm3UserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, smartChefUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useMasterchef3, useSmartChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useUnstake3 = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChef3Contract = useMasterchef3()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChef3Contract, pid, amount, account)\n      dispatch(fetchFarm3UserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChef3Contract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSmartUnstake = (sousId: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const smartChefContract = useSmartChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await smartChefUnstake(smartChefContract, amount, account)\n      dispatch(updateUserStakedBalance(String(sousId), account))\n      dispatch(updateUserBalance(String(sousId), account))\n      dispatch(updateUserPendingReward(String(sousId), account))\n    },\n    [account, dispatch, smartChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import styled from 'styled-components'\r\n\r\ninterface StyledTitleProps {\r\n  isFinished?: boolean\r\n}\r\n\r\nconst CardTitle = styled.div<StyledTitleProps>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 1.1;\r\n  margin-bottom: 14px;\r\n`\r\n\r\nexport default CardTitle\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\r\n  background: ${(props) => props.theme.card.background};\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  border-radius: 32px;\r\n  display: flex;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: ${({ isActive }) =>\r\n    isActive\r\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\r\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\r\n  flex-direction: column;\r\n  position: relative;\r\n`\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Image, Button } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag } from 'components/Tags'\r\nimport useI18n from 'hooks/useI18n'\r\nimport CardTitle from './CardTitle'\r\nimport Card from'./Card'\r\n\r\nconst Balance = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n  padding: 10px 0;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst DetailPlaceholder = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n  padding: 4px 0;\r\n`\r\nconst Value = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\r\n  padding: 24px;\r\n`\r\nconst Coming: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle>{TranslateString(414, 'Your Dball Project')}</CardTitle>\r\n        <Image src=\"/images/egg/2.png\" width={64} height={64} alt=\"Your project\" />\r\n        <Balance>0.0</Balance>\r\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\r\n        <Button\r\n          variant=\"secondary\"\r\n          as=\"button\"\r\n          fullWidth\r\n          mb=\"16px\"\r\n          // eslint-disable-next-line no-alert\r\n          onClick={() => alert(`We'll announce soon on Telegram how to apply, stay tunned!`)}\r\n        >\r\n          {TranslateString(418, 'Apply Now')}\r\n        </Button>\r\n        <DetailPlaceholder>\r\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\r\n          <Value>0.0</Value>\r\n        </DetailPlaceholder>\r\n        <DetailPlaceholder>\r\n          <div style={{ flex: 1 }}>\r\n            <span role=\"img\" aria-label=\"dball\">\r\n              🐲{' '}\r\n            </span>\r\n            {TranslateString(384, 'Your Stake')}:\r\n          </div>\r\n          <Value>0 DBALL</Value>\r\n        </DetailPlaceholder>\r\n      </div>\r\n      <Footer>\r\n        <CommunityTag />\r\n      </Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Coming\r\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  burnFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', burnFeeBP = 0 }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max])\r\n\r\n  console.log(\"depositFeeBP\",burnFeeBP)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        burnFee={burnFeeBP}\r\n      />\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CardTitle from './CardTitle'\r\n\r\ninterface Props {\r\n  hasBalance?: boolean\r\n}\r\n\r\nconst Title = styled.div`\r\n  color: #ed4b9e;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n`\r\n\r\nconst ActionLink = styled.a`\r\n  color: #ed4b9e;\r\n  font-size: 14px;\r\n`\r\n\r\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\r\n  if (hasBalance) {\r\n    return (\r\n      <div>\r\n        <Title>Action Required</Title>\r\n        <ActionLink\r\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\r\n          target=\"_blank\"\r\n        >\r\n          What do I need to do?\r\n        </ActionLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CardTitle isFinished>FINISHED</CardTitle>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OldSyrupTitle\r\n","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode\r\n  disabled?: boolean\r\n  href?: string\r\n  onClick?: () => void\r\n  size?: 'sm' | 'md' | 'lg'\r\n  text?: string\r\n  to?: string\r\n  variant?: 'default' | 'secondary' | 'tertiary'\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\r\n  const { colors, spacing } = useContext(ThemeContext)\r\n  const buttonColor = colors.background\r\n\r\n  let boxShadow: string\r\n  let buttonSize: number\r\n  let buttonPadding: number\r\n  let fontSize: number\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3]\r\n      buttonSize = 36\r\n      fontSize = 14\r\n      break\r\n    case 'lg':\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 72\r\n      fontSize = 16\r\n      break\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 56\r\n      fontSize = 16\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>\r\n    }\r\n    if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      )\r\n    }\r\n    return text\r\n  }, [href, text, to])\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string\r\n  color: string\r\n  disabled?: boolean\r\n  fontSize: number\r\n  padding: number\r\n  size: number\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\r\n  width: 100px;\r\n  height: 30px;\r\n  font-size: 14px;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nexport default Button\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport Balance from 'components/Balance'\r\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\nconst tags = {\r\n  [PoolCategory.BINANCE]: BinanceTag,\r\n  [PoolCategory.CORE]: CoreTag,\r\n  [PoolCategory.COMMUNITY]: CommunityTag,\r\n}\r\n\r\ninterface Props {\r\n  projectLink: string\r\n  totalStaked: BigNumber\r\n  blocksRemaining: number\r\n  isFinished: boolean\r\n  blocksUntilStart: number\r\n  poolCategory: PoolCategory\r\n  unit?: string\r\n}\r\n\r\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\r\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledDetailsButton = styled.button`\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  height: 32px;\r\n  justify-content: center;\r\n  outline: 0;\r\n  padding: 0;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  & > svg {\r\n    margin-left: 4px;\r\n  }\r\n`\r\n\r\nconst Details = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst FlexFull = styled.div`\r\n  flex: 1;\r\n`\r\nconst Label = styled.div`\r\n  font-size: 14px;\r\n`\r\nconst TokenLink = styled.a`\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  color: #12aab5;\r\n`\r\n\r\nconst CardFooter: React.FC<Props> = ({\r\n  projectLink,\r\n  totalStaked,\r\n  blocksRemaining,\r\n  isFinished,\r\n  blocksUntilStart,\r\n  poolCategory,\r\n  unit,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const Icon = isOpen ? ChevronUp : ChevronDown\r\n\r\n  const handleClick = () => setIsOpen(!isOpen)\r\n  const Tag = tags[poolCategory]\r\n\r\n  return (\r\n    <StyledFooter isFinished={isFinished}>\r\n      <Row>\r\n        <FlexFull>\r\n          <Tag />\r\n        </FlexFull>\r\n        <StyledDetailsButton onClick={handleClick}>\r\n          {isOpen ? 'Hide' : 'Details'} <Icon />\r\n        </StyledDetailsButton>\r\n      </Row>\r\n      {isOpen && (\r\n        <Details>\r\n          <Row style={{ marginBottom: '4px' }}>\r\n            <FlexFull>\r\n              <Label>\r\n                <span role=\"img\" aria-label=\"syrup\">\r\n                  🐲{' '}\r\n                </span>\r\n                {TranslateString(408, 'Total')}\r\n              </Label>\r\n            </FlexFull>\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\r\n          </Row>\r\n          {blocksUntilStart > 0 && (\r\n            <Row>\r\n              <FlexFull>\r\n                <Label>{TranslateString(410, 'Start')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\r\n            </Row>\r\n          )}\r\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\r\n            <Row>\r\n              <FlexFull>\r\n                <Label>{TranslateString(411, 'End')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} unit={unit} decimals={0} />\r\n            </Row>\r\n          )}\r\n          <TokenLink href={projectLink} target=\"_blank\">\r\n            {TranslateString(412, 'View project site')}\r\n          </TokenLink>\r\n        </Details>\r\n      )}\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(CardFooter)\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Label from 'components/Label'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useSmartStake } from 'hooks/useStake'\r\nimport { useSmartUnstake } from 'hooks/useUnstake'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useSmartChefHarvest } from 'hooks/useHarvest'\r\nimport Balance from 'components/Balance'\r\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\nimport CardTitle from './CardTitle'\r\nimport Card from './Card'\r\nimport OldSyrupTitle from './OldSyrupTitle'\r\nimport HarvestButton from './HarvestButton'\r\nimport CardFooter from './CardFooter'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\ninterface PoolWithApy extends Pool {\r\n  apy: BigNumber\r\n}\r\n\r\ninterface HarvestProps {\r\n  pool: PoolWithApy\r\n}\r\n\r\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\r\n  const {\r\n    sousId,\r\n    image,\r\n    tokenName,\r\n    stakingTokenName,\r\n    stakingTokenAddress,\r\n    projectLink,\r\n    harvest,\r\n    apy,\r\n    tokenDecimals,\r\n    poolCategory,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    isFinished,\r\n    userData,\r\n    stakingLimit,\r\n    burnFee,\r\n  } = pool\r\n\r\n  console.log(\"burnFee\",burnFee)\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const TranslateString = useI18n()\r\n  const stakingTokenContract = useERC20(stakingTokenAddress[CHAIN_ID])\r\n  const { account } = useWallet()\r\n  const block = useBlock()\r\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\r\n  const { onStake } = useSmartStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSmartUnstake(sousId)\r\n  const { onReward } = useSmartChefHarvest(sousId, isBnbPool)\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const allowance = new BigNumber(userData?.allowance || 0)\r\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\r\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\r\n  const earnings = new BigNumber(userData?.pendingReward || 0)\r\n\r\n  const blocksUntilStart = Math.max(startBlock - block, 0)\r\n  const blocksRemaining = Math.max(endBlock - block, 0)\r\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\r\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\r\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\r\n  const isCardActive = isFinished && accountHasStakedBalance\r\n\r\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\r\n      burnFeeBP={burnFee * 10}\r\n    />,\r\n  )\r\n\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  return (\r\n    <Card isActive={isCardActive} isFinished={isFinished}>\r\n      {isFinished && <PoolFinishedSash />}\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle isFinished={isFinished}>\r\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\r\n        </CardTitle>\r\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ flex: 1 }}>\r\n            <Image src={`/images/bnbpool/${tokenName}.png`} width={64} height={64} alt={tokenName} />\r\n          </div>\r\n          {account && harvest && !isOldSyrup && (\r\n            <HarvestButton\r\n              disabled={!earnings.toNumber() || pendingTx}\r\n              text={pendingTx ? 'Collecting' : 'Harvest'}\r\n              onClick={async () => {\r\n                setPendingTx(true)\r\n                await onReward()\r\n                setPendingTx(false)\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        {!isOldSyrup ? (\r\n          <BalanceAndCompound>\r\n            <Balance\r\n              value={getBalanceNumber(earnings, tokenDecimals)}\r\n              decimals={tokenName === 'BTCB' ? 5 : 3}\r\n              isDisabled={isFinished}\r\n            />\r\n          </BalanceAndCompound>\r\n        ) : (\r\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\r\n        )}\r\n        <Label isFinished={isFinished} text={TranslateString(330, `${tokenName} earned`)} />\r\n        <StyledCardActions>\r\n          {!account && <UnlockButton />}\r\n          {account &&\r\n            (needsApproval && !isOldSyrup ? (\r\n              <div style={{ flex: 1 }}>\r\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\r\n                  Approve\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\r\n                  onClick={\r\n                    isOldSyrup\r\n                      ? async () => {\r\n                          setPendingTx(true)\r\n                          await onUnstake('0')\r\n                          setPendingTx(false)\r\n                        }\r\n                      : onPresentWithdraw\r\n                  }\r\n                >\r\n                  {`Unstake ${stakingTokenName}`}\r\n                </Button>\r\n                <StyledActionSpacer />\r\n                {!isOldSyrup && (\r\n                  <IconButton disabled={isFinished} onClick={onPresentDeposit}>\r\n                    <AddIcon color=\"background\" />\r\n                  </IconButton>\r\n                )}\r\n              </>\r\n            ))}\r\n        </StyledCardActions>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\r\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\r\n            '-'\r\n          ) : (\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\r\n          )}\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>\r\n            <span role=\"img\" aria-label={stakingTokenName}>\r\n              🐲{' '}\r\n            </span>\r\n            {TranslateString(384, 'Your Stake')}:\r\n          </div>\r\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\r\n        </StyledDetails>\r\n        {burnFee > 0 ? (\r\n          <StyledDetails>\r\n            <div style={{ flex: 1 }}>\r\n              <span role=\"img\" aria-label={stakingTokenName}>\r\n                🔥{' '}\r\n              </span>\r\n              {TranslateString(10005, 'Burn fee')}:\r\n            </div>\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={burnFee / 10} decimals={1} unit=\"%\" />\r\n          </StyledDetails>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n      <CardFooter\r\n        projectLink={projectLink}\r\n        totalStaked={totalStaked}\r\n        blocksRemaining={blocksRemaining}\r\n        isFinished={isFinished}\r\n        blocksUntilStart={blocksUntilStart}\r\n        poolCategory={poolCategory}\r\n        unit=\"blocks\"\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst PoolFinishedSash = styled.div`\r\n  background-image: url('/images/pool-finished-sash.svg');\r\n  background-position: top right;\r\n  background-repeat: not-repeat;\r\n  height: 135px;\r\n  position: absolute;\r\n  right: -24px;\r\n  top: -24px;\r\n  width: 135px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 16px 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n  padding: 3px 0;\r\n`\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst PoolTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {TranslateString(999, 'Active')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {TranslateString(999, 'Inactive')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport {\r\n  useFarms,\r\n  usePriceBnbBusd,\r\n  usePools,\r\n} from 'state/hooks'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport Coming from './components/Coming'\r\nimport PoolCard from './components/PoolCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nconst Farm: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const farms = useFarms()\r\n  const pools = usePools(account)\r\n  const bnbPriceUSD = usePriceBnbBusd()\r\n  const block = useBlock()\r\n\r\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\r\n    const tokenPriceBN = new BigNumber(tokenPrice)\r\n    if (tokenName === 'BNB' || tokenName === 'WBNB') {\r\n      return new BigNumber(1)\r\n    }\r\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\r\n      return tokenPriceBN.div(bnbPriceUSD)\r\n    }\r\n    return tokenPriceBN\r\n  }\r\n\r\n  const poolsWithApy = pools.map((pool) => {\r\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\r\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\r\n\r\n    // /!\\ Assume that the farm quote price is BNB\r\n    const stakingTokenPriceInBNB = priceToBnb(\r\n      QuoteToken.DBALL,\r\n      stakingTokenFarm?.tokenPriceVsQuote,\r\n      stakingTokenFarm?.quoteTokenSymbol,\r\n    )\r\n    const rewardTokenPriceInBNB = priceToBnb(\r\n      pool.tokenName,\r\n      rewardTokenFarm?.tokenPriceVsQuote,\r\n      rewardTokenFarm?.quoteTokenSymbol,\r\n    )\r\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n    let totalStakingTokenInPool = new BigNumber(0)\r\n    totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\r\n\r\n    // tokens per block * price of CAKE * blocks_per_year / ( tokens in pool x salt price) * 100\r\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n\r\n    return {\r\n      ...pool,\r\n      isFinished: pool.isFinished || block > pool.endBlock,\r\n      apy,\r\n    }\r\n  })\r\n\r\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\r\n\r\n  return (\r\n    <Page>\r\n      <Hero>\r\n        <div>\r\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\r\n            {TranslateString(282, 'Super Saiyan Pool')}\r\n          </Heading>\r\n          <ul>\r\n            <li>{TranslateString(580, 'Stake DBALL to earn new tokens.')}</li>\r\n            <li>{TranslateString(404, 'You can unstake at any time.')}</li>\r\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\r\n          </ul>\r\n        </div>\r\n        <img src=\"/images/egg/14.png\" alt=\"super saiyan icon\" width={435} height={218} />\r\n      </Hero>\r\n      <PoolTabButtons />\r\n      <Divider />\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          <>\r\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\r\n              <PoolCard key={pool.sousId} pool={pool} />\r\n            ))}\r\n            <Coming />\r\n          </>\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\r\n            <PoolCard key={pool.sousId} pool={pool} />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: 1fr;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 250px;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  img {\r\n    height: auto;\r\n    max-width: 100%;\r\n  }\r\n  @media (min-width: 576px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n`\r\n\r\nexport default Farm\r\n"],"sourceRoot":""}