{"version":3,"sources":["state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/farms3/fetchFarms3.ts","state/farms3/fetchFarmUser3.ts","state/farms3/index.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","config/constants/types.ts","contexts/Localisation/translationsContext.ts","components/layout/Page.tsx","config/constants/contracts.ts","components/layout/Container.tsx","contexts/BlockContext.tsx","utils/multicall.ts","utils/addressHelpers.ts","config/constants/pools.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","config/constants/farms3.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","utils/web3.ts","state/hooks.ts","state/actions.ts"],"names":["fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","dballPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","fetchFarms3","farms3Config","farm3Config","getMasterChef3Address","masterchef3ABI","senzuPerBlock","fetchFarm3UserAllowances","masterChef3Adress","fetchFarm3UserTokenBalances","fetchFarm3UserStakedBalances","fetchFarm3UserEarnings","farms3Slice","setFarms3PublicData","setFarm3UserData","fetchFarms3PublicDataAsync","farms3","fetchFarm3UserDataAsync","userFarm3Allowances","userFarm3TokenBalances","userStakedBalances3","userFarm3Earnings","farm3Allowance","nodes","process","getNodeUrl","randomIndex","random","length","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","useRefresh","useContext","fastRefresh","slowRefresh","PoolCategory","defaultTranslationState","translations","setTranslations","TranslationsContext","Page","styled","Container","theme","mediaQueries","sm","lg","cake","56","97","masterChef","cake3","masterChef3","wbnb","lottery","lotteryNFT","mulltiCall","busd","usdt","cake2","senzu","btcb","eth","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","getBlockNumber","blockNumber","current","abi","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","i","decodeFunctionResult","getCakeAddress","addresses","chainId","getCake3Address","getLotteryAddress","getLotteryTicketAddress","pools","sousId","tokenName","stakingTokenName","DBALL","stakingTokenAddress","contractAddress","rewardTokenAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","burnFee","fetchPoolsBlockLimits","cakePools","poolsConfig","sousChefABI","cakePool","cakeStarts","cakeEnds","poolConfig","startBlock","endBlock","fetchPoolsTotalStaking","cakeABI","cakePoolsTotalStaked","p","totalStaked","nonBnbPools","filter","BNB","bnbPools","fetchPoolsAllowance","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","cakeUserInfo","amount","fetchUserPendingRewards","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakedBalances","pendingRewards","stakingTokenBalance","pendingReward","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","lpSymbol","contracts","SENZU","USDT","CAKE2","BTCB","ETH","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","storedLangCode","localStorage","getItem","storedLang","getStoredLang","console","log","fetch","then","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","items","Menu","props","useWallet","connect","reset","cakePriceUsd","usePriceCakeBusd","cakePrice2Usd","usePrice3CakeBusd","login","logout","currentLang","langs","setLang","links","priceLink","priceLink2","Wrapper","PageLoader","Home","lazy","Farms","Home3","Farms3","Pools","NotFound","Roadmap","Whitepaper","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","useFetchPublicData","Global","fallback","path","exact","tokenMode","to","component","memo","configureStore","devTools","reducer","farmsReducer","farms3Reducer","poolsReducer","Providers","rpcUrl","getRpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","RPC_URL","httpProvider","Web3","providers","HttpProvider","timeout","getContract","contractOptions","ZERO","useDispatch","useFarms","useSelector","useFarmFromPid","useFarmUser","useFarms3","useFarm3FromPid","useFarm3User","farm3","usePools","usePriceBnbBusd","usePriceEthBusd","price","setPrice","lpAddress","wbnbTokenBalanceLP","eggTokenBalanceLP","fetchPrice","usePriceCake2Busd","usePriceBTCBBusd","btcbTokenBalanceLP","useTotalValue","bnbPrice","senzuPrice","cake2Price","ethPrice","btcbPrice2","usdtPrice","useMemo","cakePrice","totalValue","farmsTotalValue","val","CAKE","plus","poolsTotalValue","poolValue","totalSaltStaked","usePrice3BnbBusd","useTotalValue3"],"mappings":"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","file":"static/js/main.dcefea93.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount;\n      let lpTotalInQuoteToken;\n      let tokenPriceVsQuote;\n      if(farmConfig.isTokenOnly){\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\n        if(farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD){\n          tokenPriceVsQuote = new BigNumber(1);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n      }else{\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if(tokenAmount.comparedTo(0) > 0){\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n\n      const [info, totalAllocPoint, dballPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'dballPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        // unstakingFeeBP: info.unstakingFeeBP,\n        dballPerBlock: new BigNumber(dballPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingEgg',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchef3ABI from 'config/abi/masterchef3.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChef3Address } from 'utils/addressHelpers'\nimport farms3Config from 'config/constants/farms3'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms3 = async () => {\n  const data = await Promise.all(\n    farms3Config.map(async (farm3Config) => {\n      const lpAdress = farm3Config.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farm3Config.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farm3Config.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farm3Config.isTokenOnly ? farm3Config.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChef3Address()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farm3Config.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farm3Config.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount;\n      let lpTotalInQuoteToken;\n      let tokenPriceVsQuote;\n      if(farm3Config.isTokenOnly){\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\n        if(farm3Config.tokenSymbol === QuoteToken.BUSD && farm3Config.quoteTokenSymbol === QuoteToken.BUSD){\n          tokenPriceVsQuote = new BigNumber(1);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n      }else{\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if(tokenAmount.comparedTo(0) > 0){\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n\n      const [info, totalAllocPoint, senzuPerBlock] = await multicall(masterchef3ABI, [\n        {\n          address: getMasterChef3Address(),\n          name: 'poolInfo',\n          params: [farm3Config.pid],\n        },\n        {\n          address: getMasterChef3Address(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChef3Address(),\n          name: 'senzuPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farm3Config,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        senzuPerBlock: new BigNumber(senzuPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms3\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchef3ABI from 'config/abi/masterchef3.json'\nimport multicall from 'utils/multicall'\nimport farms3Config from 'config/constants/farms3'\nimport { getMasterChef3Address } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarm3UserAllowances = async (account: string) => {\n  const masterChef3Adress = getMasterChef3Address()\n\n  const calls = farms3Config.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChef3Adress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarm3UserTokenBalances = async (account: string) => {\n  const calls = farms3Config.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarm3UserStakedBalances = async (account: string) => {\n  const masterChef3Adress = getMasterChef3Address()\n\n  const calls = farms3Config.map((farm) => {\n    return {\n      address: masterChef3Adress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchef3ABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarm3UserEarnings = async (account: string) => {\n  const masterChef3Adress = getMasterChef3Address()\n\n  const calls = farms3Config.map((farm) => {\n    return {\n      address: masterChef3Adress,\n      name: 'pendingEgg',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchef3ABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farms3Config from 'config/constants/farms3'\nimport fetchFarms3 from './fetchFarms3'\nimport {\n  fetchFarm3UserEarnings,\n  fetchFarm3UserAllowances,\n  fetchFarm3UserTokenBalances,\n  fetchFarm3UserStakedBalances,\n} from './fetchFarmUser3'\nimport { Farms3State, Farm3 } from '../types'\n\nconst initialState: Farms3State = { data: [...farms3Config] }\n\nexport const farms3Slice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarms3PublicData: (state, action) => {\n      const liveFarmsData: Farm3[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarm3UserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarms3PublicData, setFarm3UserData } = farms3Slice.actions\n\n// Thunks\nexport const fetchFarms3PublicDataAsync = () => async (dispatch) => {\n  const farms3 = await fetchFarms3()\n  dispatch(setFarms3PublicData(farms3))\n}\nexport const fetchFarm3UserDataAsync = (account) => async (dispatch) => {\n  const userFarm3Allowances = await fetchFarm3UserAllowances(account)\n  const userFarm3TokenBalances = await fetchFarm3UserTokenBalances(account)\n  const userStakedBalances3 = await fetchFarm3UserStakedBalances(account)\n  const userFarm3Earnings = await fetchFarm3UserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarm3Allowances.map((farm3Allowance, index) => {\n    return {\n      index,\n      allowance: userFarm3Allowances[index],\n      tokenBalance: userFarm3TokenBalances[index],\n      stakedBalance: userStakedBalances3[index],\n      earnings: userFarm3Earnings[index],\n    }\n  })\n\n  dispatch(setFarm3UserData({ arrayOfUserDataObjects }))\n}\n\nexport default farms3Slice.reducer\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: Address\n  name: string\n  token: string\n  maxContribution: string\n  minContribution: string\n  subTitle?: string\n  description?: string\n  saleAmount: string\n  raiseAmount: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'USDT' = 'USDT',\n  'CAKE2' = 'CAKE2',\n  'SENZU' = 'SENZU',\n  'DBALL'='DBALL',\n  'BTCB'='BTCB',\n  'ETH'='ETH',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface Farm3Config {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: Address\n  contractAddress: Address\n  rewardTokenAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n  burnFee: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","export default {\n  cake: {\n    56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    97: '',\n  },\n  masterChef: {\n    56: '0x8cf7044DDedbE502892B120aAf8692FeCFb71420',\n    97: '',\n  },\n  cake3: {\n    56: '0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90',\n    97: '',\n  },\n  masterChef3: {\n    56: '0xaC6DD1cf504A273583DEBd38e139736B210E3158',\n    97: '',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '',\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '',\n  },\n  usdt: {\n    56: '0x55d398326f99059ff775485246999027b3197955',\n    97: '',\n  },\n  cake2: {\n    56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    97: '',\n  },\n  senzu: {\n    56: '0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90',\n    97: '',\n  },\n  btcb: {\n    56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    97: '',\n  },\n  eth: {\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    97: '',\n  },\n}\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getCake3Address = () => {\n  return addresses.cake3[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMasterChef3Address = () => {\n  return addresses.masterChef3[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import { PoolCategory, PoolConfig, QuoteToken } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  // {\r\n  //   sousId: 0,\r\n  //   tokenName: 'CAKE',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0x9FcA113B2D4E64462229E107A8F4Aa7359D055F5',\r\n  //     56: '0xfC2BA5B6Ec7A5Fe68546fC8fB55A915b5CA5E261', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee', // BUSD, didnt find CAKE\r\n  //     56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82', // CAKE\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://pancakeswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.00295',\r\n  //   sortOrder: 1,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 1,\r\n  //   tokenName: 'WBNB',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x8eAFF0bF4C7e8a9aA3cFe13e2B4533D23251fdaF', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had WBNB\r\n  //     56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', // WBNB\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.0001736111111',\r\n  //   sortOrder: 2,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 2,\r\n  //   tokenName: 'SLME',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xFC4A74E326F34dA2954F8B0De39A759e14B5472f', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had SLIME\r\n  //     56: '0x4fcfa6cc8914ab455b5b33df916d90bfe70b6ab1', // SLIME\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://slime.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.00496031746',\r\n  //   sortOrder: 3,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 3,\r\n  //   tokenName: 'BUSD',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x1495989d4592c7e94fe1E9448A172894f179956E', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56', // BUSD\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.694',\r\n  //   sortOrder: 4,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 4,\r\n  //   tokenName: 'EGG',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x2974b4aECbEc5FFEA565E7Ef47395429f44D0c81', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6', // EGG\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://goosedefi.com',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.002624734287',\r\n  //   sortOrder: 5,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 5,\r\n  //   tokenName: 'BREW',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x88d2fb892c9577Ecb542EF6860AF13524e668b02', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0x790be81c3ca0e53974be2688cdb954732c9862e1', // BREW\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://cafeswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.005006944444',\r\n  //   sortOrder: 6,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 6,\r\n  //   tokenName: 'BUSD',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x36e3BC1E58B409160A191784E21327ACA6AcBc5C', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56', // BUSD\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.3863194444',\r\n  //   sortOrder: 7,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 5,\r\n  // },\r\n  // {\r\n  //   sousId: 7,\r\n  //   tokenName: 'BTCB',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xe2f75e1e327331c41a206D187f4D08F75FA9bF17', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c', // BTCB\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.000006944444444',\r\n  //   sortOrder: 8,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 5,\r\n  // },\r\n  // {\r\n  //   sousId: 8,\r\n  //   tokenName: 'CTC',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0xa0286abcdf5ac136cdbea4fecea0f83c093e5107',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xFD8fa2A7a5DebB757C1CDe08B113DF395A774160', // test ctc\r\n  //     56: '0x85f27A63cFb4Dc5a36d7Eb5EF8620D343817e156', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xAA8Af527961533Ba61CeF965ED750060d459a918', // FAKECTC\r\n  //     56: '0xb7F80a74aaA4FD30a3EE7C03FDe3DC88e6002C12', // CTC\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://www.cryptocoinctc.org/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.8680538',\r\n  //   sortOrder: 9,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 8,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 9,\r\n  //   tokenName: 'BUSD',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xc44E823f72f6d038BC255cD82A48B3942B00c2Ef', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56', // BUSD\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.1736111111',\r\n  //   sortOrder: 10,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 10,\r\n  // },\r\n  // {\r\n  //   sousId: 10,\r\n  //   tokenName: 'CTC',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0xa0286abcdf5ac136cdbea4fecea0f83c093e5107',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xFD8fa2A7a5DebB757C1CDe08B113DF395A774160', // test ctc\r\n  //     56: '0xf1eFc9e49EB1805AEd72917a0479bddFB5560d32', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xAA8Af527961533Ba61CeF965ED750060d459a918', // FAKECTC\r\n  //     56: '0xb7F80a74aaA4FD30a3EE7C03FDe3DC88e6002C12', // CTC\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://www.cryptocoinctc.org/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.8680538',\r\n  //   sortOrder: 11,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 8,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 11,\r\n  //   tokenName: 'CAKE',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0x9FcA113B2D4E64462229E107A8F4Aa7359D055F5',\r\n  //     56: '0x0A30d83b4396F34b25EB1956a79FabB5d3BaB931', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee', // BUSD, didnt find CAKE\r\n  //     56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82', // CAKE\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://pancakeswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.003681388889',\r\n  //   sortOrder: 12,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 15,\r\n  // },\r\n  // {\r\n  //   sousId: 12,\r\n  //   tokenName: 'WBNB',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xA5e2C1ABc73F411180e0a2371a3A546B402A96F9', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had WBNB\r\n  //     56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', // WBNB\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.00005541666667',\r\n  //   sortOrder: 13,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 15,\r\n  // },\r\n  // {\r\n  //   sousId: 13,\r\n  //   tokenName: 'BLUE',\r\n  //   stakingTokenName: QuoteToken.SALTBLUE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0xc7953f27b4b7049e41c3c10354e995870cb8e109', // CAKE-BLUE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xdF62141c12f54B17B7e6F158eD36629856E74C97', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had WBNB\r\n  //     56: '0x36C0556c2B15aED79F842675Ff030782738eF9e8', // BLUE\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://blueswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.005787037037',\r\n  //   sortOrder: 14,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 14,\r\n  //   tokenName: 'SLME',\r\n  //   stakingTokenName: QuoteToken.SALTSLME,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0xbea4674a61cccc6b735999511ba9a8ba3aa26a85', // CAKE-slime\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xD4A55D437Da5753da2f937518Fd797f5d2211E1c', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had SLIME\r\n  //     56: '0x4fcfa6cc8914ab455b5b33df916d90bfe70b6ab1', // SLIME\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://slime.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '.002899305556',\r\n  //   sortOrder: 15,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 30,\r\n  // },\r\n  // {\r\n  //   sousId: 15,\r\n  //   tokenName: 'BUSD',\r\n  //   stakingTokenName: QuoteToken.SALTBUSD,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x6596f770786915556C47E301cC8290aa14288d99', // CAKE-BUSD\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x94fcecEdBe1050d079c60b1EDeb1D4D16B3BF76C', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56', // BUSD\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.01261865625',\r\n  //   sortOrder: 16,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 100,\r\n  // },\r\n  // {\r\n  //   sousId: 16,\r\n  //   tokenName: 'MOMO',\r\n  //   stakingTokenName: QuoteToken.SALTMOMO,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2e63a08ca1ab08a3f1eb0ca0d3f0a1a4278dfa8f', // CAKE-MOMO\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xb72893D5ABFce5940F3f8F401eFCdb2A95E5f7c7', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xafb2997fe9a99022e61c7e01b974e0e3d7704b02', // MOMO\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://momoprotocol.finance/#/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.01157407407',\r\n  //   sortOrder: 16,\r\n  //   isFinished: false,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 5,\r\n  // },\r\n  // {\r\n  //   sousId: 17,\r\n  //   tokenName: 'PALM',\r\n  //   stakingTokenName: QuoteToken.SALTPALM,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x34951e9ca4891b4264a6cb9850e0b85a850414e5', // CAKE-PALM\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x42187c7eada603198165c2B95EA237865036BEd1', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0x9768E5b2d8e761905BC81Dfc554f9437A46CdCC6', // PALM\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://yieldbay.finance',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.00744047619',\r\n  //   sortOrder: 16,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 10,\r\n  // },\r\n  // {\r\n  //   sousId: 18,\r\n  //   tokenName: 'CAKE',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0x9FcA113B2D4E64462229E107A8F4Aa7359D055F5',\r\n  //     56: '0x59f2B754944e78f849E03db39273da9251ADbF0E', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee', // BUSD, didnt find CAKE\r\n  //     56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82', // CAKE\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://pancakeswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.001191340278',\r\n  //   sortOrder: 17,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 15,\r\n  // },\r\n  // {\r\n  //   sousId: 19,\r\n  //   tokenName: 'MCH',\r\n  //   stakingTokenName: QuoteToken.SALTMCH,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0xf09a33f69c7f9a19f87c53469b52665ec4e1c97b', // CAKE-MCH\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0x9FcA113B2D4E64462229E107A8F4Aa7359D055F5',\r\n  //     56: '0x01c1e411D447e9d18D95C05408A7e765Ec308D48', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee', // BUSD, didnt find CAKE\r\n  //     56: '0x46483f3a766ae2c0c811ff953ac3dc69a3a20968', // MCH\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://magnifico-chef-git-main-chefmagnifico.vercel.app/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.0162037037',\r\n  //   sortOrder: 18,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 10,\r\n  // },\r\n  {\r\n    sousId: 21,\r\n    tokenName: 'CAKE',\r\n    stakingTokenName: QuoteToken.DBALL,\r\n    stakingTokenAddress: {\r\n      97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9', // CAKE\r\n    },\r\n    contractAddress: {\r\n      97: '0x9FcA113B2D4E64462229E107A8F4Aa7359D055F5',\r\n      56: '0xBa7D3031425B824464548b182374457949c5A6ac', // SmartChef\r\n    },\r\n    rewardTokenAddress: {\r\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee', // BUSD, didnt find CAKE\r\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82', // CAKE\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n    harvest: true,\r\n    tokenPerBlock: '0.0004375',\r\n    sortOrder: 2,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    burnFee: 30,\r\n  },\r\n  {\r\n    sousId: 20,\r\n    tokenName: 'WBNB',\r\n    stakingTokenName: QuoteToken.DBALL,\r\n    stakingTokenAddress: {\r\n      97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9', // CAKE\r\n    },\r\n    contractAddress: {\r\n      97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n      56: '0xa589a74D31e503073D7c7932a67AbD3f20F9eeB4', // SmartChef\r\n    },\r\n    rewardTokenAddress: {\r\n      97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had WBNB\r\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', // WBNB\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://binance.com/',\r\n    harvest: true,\r\n    tokenPerBlock: '0.00003651736111',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    burnFee: 30,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport multicall from 'utils/multicall'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const cakePools = poolsConfig\r\n  const cakeStarts = await multicall(\r\n    sousChefABI,\r\n    cakePools.map((cakePool) => ({\r\n      address: cakePool.contractAddress[CHAIN_ID],\r\n      name: 'startBlock',\r\n    })),\r\n  )\r\n  const cakeEnds = await multicall(\r\n    sousChefABI,\r\n    cakePools.map((cakePool) => ({\r\n      address: cakePool.contractAddress[CHAIN_ID],\r\n      name: 'bonusEndBlock',\r\n    })),\r\n  )\r\n\r\n  return [\r\n    ...cakePools.map((poolConfig, index) => {\r\n      const startBlock = cakeStarts[index]\r\n      const endBlock = cakeEnds[index]\r\n      return {\r\n        sousId: poolConfig.sousId,\r\n        startBlock: new BigNumber(startBlock).toJSON(),\r\n        endBlock: new BigNumber(endBlock).toJSON(),\r\n      }\r\n    }),\r\n  ]\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const cakePools = poolsConfig\r\n  const cakePoolsTotalStaked = await multicall(\r\n    cakeABI,\r\n    cakePools.map((cakePool) => ({\r\n      address: cakePool.stakingTokenAddress[CHAIN_ID],\r\n      name: 'balanceOf',\r\n      params: [cakePool.contractAddress[CHAIN_ID]],\r\n    })),\r\n  )\r\n\r\n  return [\r\n    ...cakePools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(cakePoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n","import pools from 'config/constants/pools'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = pools.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = pools.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst web3 = getWeb3()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress[CHAIN_ID],\r\n    name: 'allowance',\r\n    params: [account, p.contractAddress[CHAIN_ID]],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress[CHAIN_ID],\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const cakePools = pools\r\n  const cakeUserInfo = await multicall(\r\n    sousChefABI,\r\n    cakePools.map((p) => ({\r\n      address: p.contractAddress[CHAIN_ID],\r\n      name: 'userInfo',\r\n      params: [account],\r\n    })),\r\n  )\r\n\r\n  return {\r\n    ...pools.reduce(\r\n      (acc, pool, index) => ({\r\n        ...acc,\r\n        [pool.sousId]: new BigNumber(cakeUserInfo[index]?.amount._hex).toJSON(),\r\n      }),\r\n      {},\r\n    ),\r\n  }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const cakePools = pools\r\n  const res = await multicall(\r\n    sousChefABI,\r\n    cakePools.map((p) => ({\r\n      address: p.contractAddress[CHAIN_ID],\r\n      name: 'pendingReward',\r\n      params: [account],\r\n    })),\r\n  )\r\n\r\n  return {\r\n    ...pools.reduce(\r\n      (acc, pool, index) => ({\r\n        ...acc,\r\n        [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n      }),\r\n      {},\r\n    ),\r\n  }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index]?.userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId],\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'DBALL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x55d06D963CDc4405E204FB1585b45b5E8e353719',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'DBALL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3330Bde1FfB5E358FCadfA266f98c95D7D5DC9B9',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 29,\n    risk: 5,\n    lpSymbol: 'DBALL-SENZU LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7CA6751Ae5CB4676ace4c2AA0D039778642e2702',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.SENZU,\n    quoteTokenAdresses: contracts.senzu,\n  },\n  {\n    pid: 30,\n    risk: 5,\n    lpSymbol: 'DBALL-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4a228A09B2ED4B9995b05F87bE60E7D4dCCf28C4',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.USDT,\n    quoteTokenAdresses: contracts.usdt,\n  },\n  {\n    pid: 31,\n    risk: 5,\n    lpSymbol: 'DBALL-CAKE LP',\n    lpAddresses: {\n      97: '',\n      56: '0xeA28357967d1c80b86928DAE71609f1456CC9938',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.CAKE2,\n    quoteTokenAdresses: contracts.cake2,\n  },\n  // {\n  //   pid: 3,\n  //   risk: 3,\n  //   lpSymbol: 'BNB-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n  //   },\n  //   tokenSymbol: 'BNB',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 4,\n  //   risk: 1,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd',\n  //   },\n  //   tokenSymbol: 'USDT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x55d398326f99059ff775485246999027b3197955',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 6,\n  //   risk: 2,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7561eee90e24f3b348e1087a005f78b4c8453524',\n  //   },\n  //   tokenSymbol: 'BTCB',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 7,\n  //   risk: 2,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x70d8929d04b60af4fb9b58713ebcf18765ade422',\n  //   },\n  //   tokenSymbol: 'ETH',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 5,\n  //   risk: 1,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc',\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 8,\n  //   risk: 4,\n  //   lpSymbol: 'CAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\n  //   },\n  //   tokenSymbol: 'CAKE',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 9,\n  //   risk: 5,\n  //   lpSymbol: 'EGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd1b59d11316e87c3a0a069e80f590ba35cd8d8d3',\n  //   },\n  //   tokenSymbol: 'EGG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 10,\n  //   risk: 5,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4e0f3385d932f7179dee045369286ffa6b03d887',\n  //   },\n  //   tokenSymbol: 'ALPHA',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 11,\n  //   risk: 5,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n  //   },\n  //   tokenSymbol: 'LINK',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 12,\n  //   risk: 5,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n  //   },\n  //   tokenSymbol: 'FIL',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 13,\n  //   risk: 5,\n  //   lpSymbol: 'XCUR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x54482282df17f523fee3af5d10bcfba080cf2588',\n  //   },\n  //   tokenSymbol: 'XCUR',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x708c671aa997da536869b50b6c67fa0c32ce80b2',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 14,\n  //   risk: 5,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4269e7f43a63cea1ad7707be565a94a9189967e9',\n  //   },\n  //   tokenSymbol: 'UNI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 15,\n  //   risk: 5,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x60bb03d1010b99ceadd0dd209b64bc8bd83da161',\n  //   },\n  //   tokenSymbol: 'LIT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  {\n    pid: 2,\n    risk: 5,\n    isTokenOnly: true,\n    lpSymbol: 'DBALL',\n    lpAddresses: {\n      97: '',\n      56: '0x55d06D963CDc4405E204FB1585b45b5E8e353719', // EGG-BUSD LP\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  // {\n  //   pid: 16,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'BUSD',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x55d06D963CDc4405E204FB1585b45b5E8e353719', // EGG-BUSD LP (BUSD-BUSD will ignore)\n  //   },\n  //   tokenSymbol: 'BUSD',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  {\n    pid: 19,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WBNB',\n    lpAddresses: {\n      97: '',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f', // BNB-BUSD LP\n    },\n    tokenSymbol: 'WBNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  // {\n  //   pid: 17,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'USDT',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd', // USDT-BUSD LP\n  //   },\n  //   tokenSymbol: 'USDT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x55d398326f99059ff775485246999027b3197955',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 20,\n  //   risk: 2,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'BTCB',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb8875e207ee8096a929d543c9981c9586992eacb', // BTCB-BUSD LP\n  //   },\n  //   tokenSymbol: 'BTCB',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 21,\n  //   risk: 2,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'ETH',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd9a0d1f5e02de2403f68bb71a15f8847a854b494', // ETH-BUSD LP\n  //   },\n  //   tokenSymbol: 'ETH',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 18,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'DAI',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 22,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'ALPHA',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5ba0d670ea3db79067ee6861b960f06d53712e18', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'ALPHA',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 23,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'LINK',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe54a9d8412287cfc675cae18a0011483ef975f05', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'LINK',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 24,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'SALT',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6596f770786915556c47e301cc8290aa14288d99', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'SALT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x2849b1ae7e04a3d9bc288673a92477cf63f28af4',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 25,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'FIL',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8d2cc42acf64647dc21c43fb7fff3b8d0551194f', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'FIL',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 27,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'UNI',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8f3624467993967f89c30c5f65d270b154b1b0fd', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'UNI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 28,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'LIT',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x581c5de0cf860b740fe1fe96d973631bdd157a5b', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'LIT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  {\n    pid: 32,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'SENZU',\n    lpAddresses: {\n      97: '',\n      56: '0xCb8e10cd31EBB2633425CD4f579221Ad126Da040', // DAI-BUSD LP\n    },\n    tokenSymbol: 'SENZU',\n    tokenAddresses: {\n      97: '',\n      56: '0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 33,\n    risk: 5,\n    lpSymbol: 'DBALL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x00703c1b4522e9827e9ea6e7fbc7822018811beb',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 34,\n    risk: 5,\n    lpSymbol: 'DBALL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFe086591948040B399C737cACeebeea43E16E30F',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 35,\n    risk: 5,\n    lpSymbol: 'DBALL-SENZU LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1134d78dd9d900d99cfa561aeb2a46942533053c',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.SENZU,\n    quoteTokenAdresses: contracts.senzu,\n  },\n  {\n    pid: 36,\n    risk: 5,\n    lpSymbol: 'DBALL-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9a465fec82d4c11aa948b80d26dc00b04c0e030c',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.USDT,\n    quoteTokenAdresses: contracts.usdt,\n  },\n  // {\n  //   pid: 37,\n  //   risk: 5,\n  //   lpSymbol: 'DBALL-CAKE LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4BE6C5bEC743c36C5C405f9E8505fa9946148497',\n  //   },\n  //   tokenSymbol: 'DBALL',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE2,\n  //   quoteTokenAdresses: contracts.cake2,\n  // },\n  {\n    pid: 38,\n    risk: 5,\n    lpSymbol: 'DBALL-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x65de8e1839113c326eeda2d822c4a6d7ffddf211',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.BTCB,\n    quoteTokenAdresses: contracts.btcb,\n  },\n  {\n    pid: 39,\n    risk: 5,\n    lpSymbol: 'DBALL-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbd49376dcda0dec463663ad9ef6110af5a6f38e7',\n    },\n    tokenSymbol: 'DBALL',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.ETH,\n    quoteTokenAdresses: contracts.eth,\n  },\n  // {\n  //   pid: 40,\n  //   risk: 5,\n  //   lpSymbol: 'SENZU-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x231fe692d06c11cea5b94711ce47e5d49e06fcd7',\n  //   },\n  //   tokenSymbol: 'SENZU',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  {\n    pid: 40,\n    risk: 5,\n    lpSymbol: 'SENZU-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe2e7c19931189541e2bda6dac3c0e366017cf5fd',\n    },\n    tokenSymbol: 'SENZU',\n    tokenAddresses: {\n      97: '',\n      56: '0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  // {\n  //   pid: 41,\n  //   risk: 5,\n  //   lpSymbol: 'SENZU-CAKE LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4BE6C5bEC743c36C5C405f9E8505fa9946148497',\n  //   },\n  //   tokenSymbol: 'SENZU',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE2,\n  //   quoteTokenAdresses: contracts.cake2,\n  // },\n  {\n    pid: 42,\n    risk: 4,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa9fd691b4742d349f4f0d7ed51892ebe88de9636',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 43,\n    risk: 3,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a932d0f54f09675ab019c23dea3428db95c9b75',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 44,\n    risk: 1,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xebc8dc5f991971f85e3ec6b23895e23be9f587fa',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 45,\n    risk: 2,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4cc427c6964217a6b9d8bba294806e03db49e36c',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 46,\n    risk: 2,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x349a497f5882c237d9f1ebe6ad585b999670b13d',\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 47,\n    risk: 2,\n    isTokenOnly: true,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '',\n      56: '0x0Ed8E0A2D99643e1e65CCA22Ed4424090B8B7458', // CAKE-BUSD LP\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 48,\n    risk: 2,\n    isTokenOnly: true,\n    lpSymbol: 'BTCB',\n    lpAddresses: {\n      97: '',\n      56: '0xb8875e207ee8096a929d543c9981c9586992eacb', // BTCB-BUSD LP\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 49,\n    risk: 2,\n    isTokenOnly: true,\n    lpSymbol: 'ETH',\n    lpAddresses: {\n      97: '',\n      56: '0xd9a0d1f5e02de2403f68bb71a15f8847a854b494', // ETH-BUSD LP\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n]\n\nexport default farms","import contracts from './contracts'\r\nimport { Farm3Config, QuoteToken } from './types'\r\n\r\nconst farms3: Farm3Config[] = [\r\n  {\r\n    pid: 0,\r\n    risk: 5,\r\n    lpSymbol: 'SENZU-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcb8e10cd31ebb2633425cd4f579221ad126da040',\r\n    },\r\n    tokenSymbol: 'SENZU',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 1,\r\n    risk: 5,\r\n    lpSymbol: 'SENZU-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc6d0aebc95b7cfee7c0212cf5a1d0e00e9209fa4',\r\n    },\r\n    tokenSymbol: 'SENZU',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 3,\r\n    risk: 5,\r\n    lpSymbol: 'DBALL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x55d06D963CDc4405E204FB1585b45b5E8e353719',\r\n    },\r\n    tokenSymbol: 'DBALL',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 4,\r\n    risk: 5,\r\n    lpSymbol: 'DBALL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3330Bde1FfB5E358FCadfA266f98c95D7D5DC9B9',\r\n    },\r\n    tokenSymbol: 'DBALL',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 7,\r\n    risk: 3,\r\n    lpSymbol: 'BNB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\r\n    },\r\n    tokenSymbol: 'BNB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 6,\r\n    risk: 2,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7561eee90e24f3b348e1087a005f78b4c8453524',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 8,\r\n    risk: 4,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'SENZU',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcb8e10cd31ebb2633425cd4f579221ad126da040', // VIKING-BUSD LP\r\n    },\r\n    tokenSymbol: 'SENZU',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 5,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'DBALL',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x55d06d963cdc4405e204fb1585b45b5e8e353719', // VIKING-BUSD LP\r\n    },\r\n    tokenSymbol: 'DBALL',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xceb2f5e9c7f2d3bcd12a7560d73c56f3396af3f9',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n]\r\n\r\nexport default farms3\r\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n    background: url(/images/backgrounds/bgwebsite.png) top right no-repeat;\n    background-attachment: fixed;\n    \n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'LP Migration',\n        href: 'https://v1exchange.dragonballfinance.org/#/migrate',\n      },\n      {\n        label: 'Exchange',\n        href: 'http://exchange.dragonballfinance.org/',\n      },\n      {\n        label: 'Liquidity',\n        href: 'http://exchange.dragonballfinance.org/#/pool',\n      },\n      {\n        label: 'V1 Liquidity (Old)',\n        href: 'https://v1exchange.dragonballfinance.org/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Layer 1',\n    icon: 'LayerIcon',\n    href: '/layer/info',\n  },\n  {\n    label: 'Super Saiyan Pool',\n    icon: 'PoolIcon',\n    href: '/supersaiyanpool',\n  },\n  // {\n  //   label: 'IFO',\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  // {\n  //   label: 'Nft',\n  //   icon: 'NftIcon',\n  //   href: '/Nft',\n  // },\n  // {\n  //   label: 'Lottery',\n  //   icon: 'TicketIcon',\n  //   href: '/Lottery',\n  // },\n  // {\n  //   label: 'Gaming App',\n  //   icon: 'NftIcon',\n  //   href: '/Gaming',\n  // },\n  {\n    label: 'DBALL Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'BSC Scan',\n        href: 'https://bscscan.com/token/0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n      },\n      {\n        label: 'Price Graph',\n        href: 'https://dex.guru/token/0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9-bsc',\n      },\n      {\n        label: 'DApp Radar',\n        href: 'https://dappradar.com/binance-smart-chain/defi/dragonball-finance',\n      },\n    ],\n  },\n  {\n    label: 'SENZU Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'BSC Scan',\n        href: 'https://bscscan.com/token/0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90',\n      },\n      {\n        label: 'Price Graph',\n        href: 'https://dex.guru/token/0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90-bsc',\n      },\n      {\n        label: 'DApp Radar',\n        href: 'https://dappradar.com/binance-smart-chain/defi/dragonball-finance',\n      },\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Github',\n        href: 'https://github.com/DragonBallFinance',\n      },\n      {\n        label: 'Docs',\n        href: 'https://docs.dragonballfinance.org/',\n      },\n      {\n        label: 'Blog',\n        href: 'https://dragonballfinance.medium.com/',\n      },\n      {\n        label: 'Whitepaper',\n        href: 'https://dragonballfinance.org/Whitepaper.pdf',\n      },\n    ],\n  },\n  {\n    label: 'Roadmap',\n    icon: 'RoadmapIcon',\n    href: 'https://dragonballfinance.org/Roadmap',\n  },\n  {\n    label: 'DBALL Audit',\n    icon: 'AuditIcon',\n    href: 'https://dragonballfinance.org/Dball.pdf',\n  },\n  {\n    label: 'SENZU Audit',\n    icon: 'AuditIcon',\n    href: 'https://dragonballfinance.org/Senzu.pdf',\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd, usePrice3CakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePrice2Usd = usePrice3CakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      cakePrice2Usd={cakePrice2Usd.toNumber()}\n      links={config}\n      priceLink=\"https://bscscan.com/token/0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9\"\n      priceLink2=\"https://bscscan.com/token/0xd89745a21c3eb87cfbc0c0e6eb6a30974cadbd90\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport styled from 'styled-components'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n\nconst Home3 = lazy(() => import('./views/Layer/Home'))\nconst Farms3 = lazy(() => import('./views/Layer/Farms'))\n\n// const Lottery = lazy(() => import('./views/Lottery'))\nconst Pools = lazy(() => import('./views/Pools'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n// const Gaming = lazy(() => import('./views/Gaming'))\n// const Layered = lazy(() => import('./views/Layered'))\nconst Roadmap = lazy(() => import('./views/Roadmap'))\nconst Whitepaper = lazy(() => import('./views/Whitepaper'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\n\n\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode />\n            </Route>\n            <Route path=\"/layer/info\" exact>\n              <Home3 />\n            </Route>\n            <Route path=\"/layer/farms\">\n              <Farms3 />\n            </Route>\n            <Route path=\"/layer/pools\">\n              <Farms3 tokenMode />\n            </Route>\n            <Route path=\"/supersaiyanpool\">\n             <Pools />\n            </Route>\n            {/* <Route path=\"/Gaming\">\n              <Gaming />\n            </Route> */}\n            <Route path=\"/Whitepaper\">\n              <Whitepaper />\n            </Route>\n            {/* <Route path=\"/lottery\">\n              <Lottery />\n            </Route> */}\n            {/* <Route path=\"/Layered\">\n              <Layered />\n            </Route> */}\n            {/* <Route path=\"/ifo\">\n             <Ifos />\n            </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/Nft\">\n              <Nft />\n            </Route> */}\n            <Route path=\"/Roadmap\">\n              <Roadmap />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nests\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport farms3Reducer from './farms3'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    farms3: farms3Reducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useRef, useState, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n// import poolsConfig from 'config/constants/pools'\nimport erc20 from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport CoinGecko from 'coingecko-api'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, fetchFarms3PublicDataAsync } from './actions'\nimport { State, Farm, Pool, Farm3 } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n    dispatch(fetchFarms3PublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Farms3\n\nexport const useFarms3 = (): Farm3[] => {\n  const farms3 = useSelector((state: State) => state.farms3.data)\n  return farms3\n}\n\nexport const useFarm3FromPid = (pid): Farm3 => {\n  const farm3 = useSelector((state: State) => state.farms3.data.find((f) => f.pid === pid))\n  return farm3\n}\n\nexport const useFarm3FromSymbol = (lpSymbol: string): Farm3 => {\n  const farm3 = useSelector((state: State) => state.farms3.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm3\n}\n\nexport const useFarm3User = (pid) => {\n  const farm3 = useFarm3FromPid(pid)\n\n  return {\n    allowance: farm3.userData ? new BigNumber(farm3.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm3.userData ? new BigNumber(farm3.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm3.userData ? new BigNumber(farm3.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm3.userData ? new BigNumber(farm3.userData.earnings) : new BigNumber(0),\n  }\n}\n// Pools\n\nexport const usePools = (account: string): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  return useSelector((state: State) => state.pools.data)\n}\n\nexport const usePoolFromPid = (sousId: number): Pool =>\n  useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 43 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm?.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // EGG-BUSD LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\n// export const usePriceEthBusd = (): BigNumber => {\n//   const [ethPrice, setEthPrice] = useState(new BigNumber(1900))\n\n//   useEffect(() => {\n//     const fetchPrice = async () => {\n//       const CoinGeckoClient = new CoinGecko()\n//       const result = await CoinGeckoClient.coins.fetch('ethereum', {})\n//       setEthPrice(new BigNumber(result.data?.market_data?.current_price?.usd))\n//     }\n\n//     fetchPrice()\n//   }, [])\n\n//   return ethPrice\n// }\n\n\nexport const usePriceEthBusd = () => {\n  const [price, setPrice] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const lpAddress = '0xd9A0d1F5e02dE2403f68Bb71a15F8847A854b494'\n      const [wbnbTokenBalanceLP, eggTokenBalanceLP] = await multicall(erc20, [\n        {\n          address: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        {\n          address: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n      ])\n\n      if (!eggTokenBalanceLP || !wbnbTokenBalanceLP) return\n\n      setPrice(new BigNumber(wbnbTokenBalanceLP).div(new BigNumber(eggTokenBalanceLP)))\n    }\n\n    fetchPrice()\n  }, [])\n\n  return price\n}\n\n\nexport const usePriceCake2Busd = () => {\n  const [price, setPrice] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const lpAddress = '0x0Ed8E0A2D99643e1e65CCA22Ed4424090B8B7458'\n      const [wbnbTokenBalanceLP, eggTokenBalanceLP] = await multicall(erc20, [\n        {\n          address: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        {\n          address: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n      ])\n\n      if (!eggTokenBalanceLP || !wbnbTokenBalanceLP) return\n\n      setPrice(new BigNumber(wbnbTokenBalanceLP).div(new BigNumber(eggTokenBalanceLP)))\n    }\n\n    fetchPrice()\n  }, [])\n\n  return price\n}\n\n// export const usePriceBTCBBusd = (): BigNumber => {\n//   const [btcbPrice, setEthPrice] = useState(new BigNumber(10))\n\n//   useEffect(() => {\n//     const fetchPrice = async () => {\n//       const CoinGeckoClient = new CoinGecko()\n//       const result = await CoinGeckoClient.coins.fetch('bitcoinbrand', {})\n//       setEthPrice(new BigNumber(result.data?.market_data?.current_price?.usd))\n//     }\n\n//     fetchPrice()\n//   }, [])\n\n//   return btcbPrice\n// }\n\nexport const usePriceBTCBBusd = () => {\n  const [price, setPrice] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const lpAddress = '0xb8875e207EE8096a929D543C9981C9586992eAcb' // BTCB/BNB LP\n      const [wbnbTokenBalanceLP, btcbTokenBalanceLP] = await multicall(erc20, [\n        {\n          address: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        {\n          address: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n      ])\n\n      if (!btcbTokenBalanceLP || !wbnbTokenBalanceLP) return\n\n      setPrice(new BigNumber(wbnbTokenBalanceLP).div(new BigNumber(btcbTokenBalanceLP)))\n    }\n\n    fetchPrice()\n  }, [])\n\n  return price\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const senzuPrice = usePrice3CakeBusd()\n  const cake2Price = usePriceCake2Busd()\n  const ethPrice = usePriceEthBusd()\n  const btcbPrice2 = usePriceBTCBBusd()\n\n  \n\n  const usdtPrice: BigNumber = useMemo(() => {\n    return new BigNumber(1)\n  }, [])\n  const cakePrice = usePriceCakeBusd()\n\n  const { account } = useWallet()\n  const pools = usePools(account)\n  const totalValue = useRef(new BigNumber(0))\n\n  useEffect(() => {\n    let farmsTotalValue = new BigNumber(0)\n    for (let i = 0; i < farms.length; i++) {\n      const farm = farms[i]\n      if (farm.lpTotalInQuoteToken) {\n        let val\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          val = bnbPrice.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.SENZU) {\n          val = senzuPrice.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE2) {\n          val = cake2Price.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n          val = cakePrice.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.USDT) {\n          val = usdtPrice.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.BTCB) {\n          val = btcbPrice2.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n          val = ethPrice.times(farm.lpTotalInQuoteToken)\n        } else {\n          val = farm.lpTotalInQuoteToken\n        }\n        farmsTotalValue = farmsTotalValue.plus(val)\n      }\n    }\n\n    let poolsTotalValue = new BigNumber(0)\n    for (let i = 0; i < pools.length; i++) {\n      const pool = pools[i]\n      let poolValue: BigNumber\n      if (pool.stakingTokenName === QuoteToken.DBALL) {\n        const totalSaltStaked = new BigNumber(pool.totalStaked).div(new BigNumber(10).pow(18))\n        poolValue = cakePrice.times(totalSaltStaked)\n      }\n\n      poolsTotalValue = poolsTotalValue.plus(poolValue ?? ZERO)\n    }\n\n    totalValue.current = farmsTotalValue\n  }, [bnbPrice, senzuPrice, farms, pools, cakePrice, cake2Price, usdtPrice, ethPrice, btcbPrice2])\n\n  if (!totalValue) {\n    return new BigNumber(0)\n  }\n  return totalValue.current\n}\n\n\n// Prices3\n\nexport const usePrice3BnbBusd = (): BigNumber => {\n  const pid = 7 // BUSD-BNB LP\n  const farm = useFarm3FromPid(pid)\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm?.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePrice3CakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // EGG-BUSD LP\n  const farm = useFarm3FromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\nexport const useTotalValue3 = (): BigNumber => {\n  const farms = useFarms3();\n  const bnbPrice = usePrice3BnbBusd();\n  const cakePrice = usePrice3CakeBusd();\n\n\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n\n    }\n  }\n  return value;\n}","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { fetchFarms3PublicDataAsync, fetchFarm3UserDataAsync } from './farms3'\n"],"sourceRoot":""}