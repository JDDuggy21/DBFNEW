{"version":3,"sources":["components/Input/Input.tsx","hooks/useBlock.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","utils/getTimePeriods.ts","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","useBlock","useContext","BlockContext","Wrapper","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","Title","Heading","attrs","Blurb","Text","secondary","StyledHero","Hero","TranslateString","useI18n","Container","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","StyledIfoCardDescription","Divider","borderColor","ToggleButton","button","isOpen","IfoCardDescription","defaultIsOpen","description","useState","setIsOpen","onClick","StyledIfoCardDetails","Item","Display","IfoCardDetails","saleAmount","token","currency","projectSiteUrl","maxContribution","minContribution","href","style","margin","ButtonWrapper","LabelButton","label","buttonLabel","disabled","fontSize","color","bold","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","max","symbol","onSelectMax","toLocaleString","ContributeModal","contract","onDismiss","setValue","pendingTx","setPendingTx","useWallet","account","balance","web3","useWeb3","title","e","currentTarget","getFullDisplayBalance","BigNumber","toString","justifyContent","fullWidth","mr","a","eth","sendTransaction","from","_address","times","pow","IfoCardContribute","currencyAddress","status","raisingAmount","softCapReached","finalized","contributions","setContributions","claimedTokens","setClaimedTokens","refundedTokens","setRefundedTokens","tokensPerBnb","setTokensPerBnb","useModal","onPresentContributeModal","useEffect","methods","call","refunds","fetch","claim","claimTokens","send","refund","claimRefund","isFinished","percentOfUserContribution","userClaimed","isGreaterThan","userRefunded","claimableTokens","getBalanceNumber","toFixed","StyledProgress","IfoCardProgress","progress","primaryStep","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","Details","Countdown","IfoCardTime","isLoading","secondsUntilStart","secondsUntilEnd","countdownToUse","timeUntil","suffix","StyledIfoCard","Card","ActionWrapper","StyledLinearProgress","withStyles","barColorPrimary","backgroundColor","bar2Buffer","dashedColorPrimary","backgroundImage","root","borderRadius","padding","LinearProgress","getStatus","currentTime","startTime","endTime","IfoCard","ifo","id","raiseAmount","tokenDecimals","blocksRemaining","endBlockNum","hardCap","hardCapProgress","softCap","softCapProgress","startBlockNum","weiRaised","state","setState","presaleContract","useIdoContract","address","process","currentBlock","Ribbon","variantColor","text","getRibbonComponent","Promise","all","parseInt","round","Date","now","fetchProgress","isActive","ribbon","valueBuffer","UnlockButton","totalAmount","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","activeIfo","ifosConfig","find","Ifo","IfoCards","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo"],"mappings":"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","file":"static/js/17.bf4442cd.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 39px;\r\n`\r\n\r\nconst IfoTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          Current IDO\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          Past IDOs\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default IfoTabButtons\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport Container from 'components/layout/Container'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  text-align: center;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  padding-bottom: 24px;\r\n  padding-top: 24px;\r\n`\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <Container>\r\n        <Title>{TranslateString(500, 'IDO: Initial Dex Offering')}</Title>\r\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\r\n        <Blurb>1% of the raised amount is used to buyback and burn SALT or contribute to a new Ocean</Blurb>\r\n      </Container>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardHeaderProps {\r\n  ifoId: string\r\n  name: string\r\n  subTitle: string\r\n}\r\n\r\nconst StyledIfoCardHeader = styled(Flex)`\r\n  & > div {\r\n    flex: 1;\r\n  }\r\n  margin-top: 48px;\r\n`\r\n\r\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\r\n  margin-bottom: 4px;\r\n  text-align: left;\r\n  margin-left: 10px;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  text-align: left;\r\n  margin-left: 10px;\r\n`\r\n\r\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => (\r\n  <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\r\n    <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\r\n    <div>\r\n      <Name>{name}</Name>\r\n      <Description>{subTitle}</Description>\r\n    </div>\r\n  </StyledIfoCardHeader>\r\n)\r\n\r\nexport default IfoCardHeader\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardDescriptionProps {\r\n  defaultIsOpen?: boolean\r\n  description: string\r\n}\r\n\r\nconst StyledIfoCardDescription = styled.div`\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 90%;\r\n`\r\n\r\nconst ToggleButton = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  cursor: pointer;\r\n  display: block;\r\n  font-weight: 600;\r\n  outline: 0;\r\n  padding: 24px 16px;\r\n  width: 100%;\r\n`\r\n\r\nconst Description = styled(Text)<{ isOpen: boolean }>`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\r\n`\r\n\r\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\r\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleClick = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <StyledIfoCardDescription>\r\n      <Divider />\r\n      <ToggleButton onClick={handleClick}>\r\n        {isOpen ? TranslateString(999, 'Hide') : TranslateString(999, 'Show')}\r\n      </ToggleButton>\r\n      <Description isOpen={isOpen}>{description}</Description>\r\n    </StyledIfoCardDescription>\r\n  )\r\n}\r\n\r\nexport default IfoCardDescription\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardDetailsProps {\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  projectSiteUrl: string\r\n  raisingAmount: BigNumber\r\n  totalAmount: BigNumber\r\n  token: string\r\n  currency: string\r\n  maxContribution: string\r\n  minContribution: string\r\n}\r\n\r\nconst StyledIfoCardDetails = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Item = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  display: flex;\r\n`\r\n\r\nconst Display = styled(Text)`\r\n  flex: 1;\r\n`\r\n\r\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\r\n  saleAmount,\r\n  token,\r\n  currency,\r\n  projectSiteUrl,\r\n  maxContribution,\r\n  minContribution,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <StyledIfoCardDetails>\r\n        <Item>\r\n          <Display>{TranslateString(584, 'For Sale')}</Display>\r\n          <Text>\r\n            {saleAmount} {token}\r\n          </Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>Max contribution</Display>\r\n          <Text>\r\n            {maxContribution} {currency}\r\n          </Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>Min contribution</Display>\r\n          <Text>\r\n            {minContribution} {currency}\r\n          </Text>\r\n        </Item>\r\n      </StyledIfoCardDetails>\r\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\r\n        {TranslateString(412, 'View project site')}\r\n      </LinkExternal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardDetails\r\n","import React, { ButtonHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  value: string\r\n  label?: string\r\n  buttonLabel: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: solid 1px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  border-color: ${({ theme }) => theme.colors.borderColor};\r\n  padding-left: 16px;\r\n`\r\n\r\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => (\r\n  <div>\r\n    {label && (\r\n      <Text fontSize=\"14px\" color=\"textSubtle\">\r\n        {label}\r\n      </Text>\r\n    )}\r\n    <ButtonWrapper>\r\n      <Text bold fontSize=\"20px\" color=\"#b0bec5\">\r\n        {value}\r\n      </Text>\r\n      <Button onClick={onClick} disabled={disabled}>\r\n        {buttonLabel}\r\n      </Button>\r\n    </ButtonWrapper>\r\n  </div>\r\n)\r\n\r\nexport default LabelButton\r\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport BalanceInput from 'components/Input/BalanceInput'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useWeb3 from 'hooks/useWeb3'\r\n\r\ninterface Props {\r\n  currency: string\r\n  contract: any\r\n  currencyAddress?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ContributeModal: React.FC<Props> = ({ currency, contract, onDismiss }) => {\r\n  const [value, setValue] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account, balance } = useWallet()\r\n  const web3 = useWeb3()\r\n  return (\r\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\r\n      <BalanceInput\r\n        value={value}\r\n        onChange={(e) => setValue(e.currentTarget.value)}\r\n        symbol={currency}\r\n        max={getFullDisplayBalance(new BigNumber(balance))}\r\n        onSelectMax={() => setValue(new BigNumber(balance).toString())}\r\n      />\r\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await web3.eth.sendTransaction({\r\n              from: account,\r\n              to: contract._address,\r\n              value: new BigNumber(value).times(new BigNumber(10).pow(18)).toString(),\r\n            })\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </Flex>\r\n      <LinkExternal\r\n        href=\"https://exchange.saltswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\r\n        style={{ margin: 'auto' }}\r\n      >\r\n        {`Get ${currency}`}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ContributeModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useModal, Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport LabelButton from './LabelButton'\r\nimport ContributeModal from './ContributeModal'\r\n\r\nexport interface Props {\r\n  address: string\r\n  currency: string\r\n  currencyAddress: string\r\n  contract: Contract\r\n  status: IfoStatus\r\n  raisingAmount: BigNumber\r\n  softCapReached: boolean\r\n  finalized: boolean\r\n}\r\n\r\nconst IfoCardContribute: React.FC<Props> = ({\r\n  currency,\r\n  currencyAddress,\r\n  contract,\r\n  status,\r\n  raisingAmount,\r\n  softCapReached,\r\n  finalized,\r\n}) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [contributions, setContributions] = useState(new BigNumber(0))\r\n  const [claimedTokens, setClaimedTokens] = useState(new BigNumber(0))\r\n  const [refundedTokens, setRefundedTokens] = useState(new BigNumber(0))\r\n  const [tokensPerBnb, setTokensPerBnb] = useState(new BigNumber(0))\r\n\r\n  const { account } = useWallet()\r\n  const [onPresentContributeModal] = useModal(\r\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\r\n  )\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      setContributions(new BigNumber(await contract.methods.contributions(account).call()))\r\n      setClaimedTokens(new BigNumber(await contract.methods.claimedTokens(account).call()))\r\n      setRefundedTokens(new BigNumber(await contract.methods.refunds(account).call()))\r\n      setTokensPerBnb(new BigNumber(await contract.methods.tokensPerBnb().call()))\r\n    }\r\n\r\n    if (account) {\r\n      fetch()\r\n    }\r\n  }, [account, contract.methods, pendingTx])\r\n\r\n  const claim = async () => {\r\n    setPendingTx(true)\r\n    await contract.methods.claimTokens().send({ from: account })\r\n    setPendingTx(false)\r\n  }\r\n\r\n  const refund = async () => {\r\n    setPendingTx(true)\r\n    await contract.methods.claimRefund().send({ from: account })\r\n    setPendingTx(false)\r\n  }\r\n\r\n  const isFinished = status === 'finished' || finalized\r\n  const percentOfUserContribution = new BigNumber(contributions).div(raisingAmount).times(100)\r\n\r\n  const userClaimed = isFinished && claimedTokens.isGreaterThan(new BigNumber(0))\r\n  const userRefunded = isFinished && refundedTokens.isGreaterThan(new BigNumber(0))\r\n\r\n  const claimableTokens = getBalanceNumber(contributions) * getBalanceNumber(tokensPerBnb)\r\n\r\n  const getButtonLabel = () => {\r\n    if (!isFinished) return 'Contribute'\r\n\r\n    if (softCapReached) return 'Claim'\r\n\r\n    return 'Refund'\r\n  }\r\n\r\n  const getLabel = () => {\r\n    if (!isFinished) return `Your contribution (${currency})`\r\n\r\n    if (softCapReached) return 'Your tokens to claim'\r\n\r\n    return 'Your tokens to refund'\r\n  }\r\n\r\n  const getButtonValue = () => {\r\n    if (!isFinished) {\r\n      return getBalanceNumber(contributions, 18).toFixed(4)\r\n    }\r\n\r\n    if (softCapReached) {\r\n      return userClaimed ? 'Claimed' : claimableTokens.toFixed(4)\r\n    }\r\n\r\n    return userRefunded ? 'Refunded' : claimableTokens.toFixed(4)\r\n  }\r\n\r\n  const getButtonHint = () => {\r\n    if (!isFinished) return `${percentOfUserContribution.toFixed(5)}% of total`\r\n\r\n    if (softCapReached) return `You'll be refunded any excess tokens when you claim`\r\n\r\n    return `You'll be refunded all your contributions`\r\n  }\r\n\r\n  const handleOnClick = () => {\r\n    if (!isFinished) return onPresentContributeModal\r\n\r\n    if (softCapReached) return claim\r\n\r\n    return refund\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LabelButton\r\n        disabled={pendingTx || userClaimed || userRefunded}\r\n        buttonLabel={getButtonLabel()}\r\n        label={getLabel()}\r\n        value={getButtonValue()}\r\n        onClick={handleOnClick()}\r\n      />\r\n      <Text fontSize=\"14px\" color=\"textSubtle\">\r\n        {getButtonHint()}\r\n      </Text>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardContribute\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Progress } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardProgressProps {\r\n  progress: number\r\n}\r\n\r\nconst StyledProgress = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => (\r\n  <StyledProgress>\r\n    <Progress primaryStep={progress} />\r\n  </StyledProgress>\r\n)\r\n\r\nexport default IfoCardProgress\r\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardTimeProps {\r\n  isLoading: boolean\r\n  status: IfoStatus\r\n  secondsUntilStart: number\r\n  secondsUntilEnd: number\r\n  finalized: boolean\r\n}\r\n\r\nconst Details = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Countdown = styled.div`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`\r\n\r\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({\r\n  isLoading,\r\n  status,\r\n  secondsUntilStart,\r\n  secondsUntilEnd,\r\n  finalized,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\r\n  const timeUntil = getTimePeriods(countdownToUse)\r\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\r\n\r\n  if (isLoading) {\r\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\r\n  }\r\n\r\n  if (countdownToUse <= 0) {\r\n    return (\r\n      <Details>\r\n        <Text bold>{TranslateString(999, 'Finished!')}</Text>\r\n      </Details>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Details>\r\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\r\n    </Details>\r\n  )\r\n}\r\n\r\nexport default IfoCardTime\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, CardRibbon, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useIdoContract } from 'hooks/useContract'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { withStyles } from '@material-ui/core'\r\nimport IfoCardHeader from './IfoCardHeader'\r\nimport IfoCardDescription from './IfoCardDescription'\r\nimport IfoCardDetails from './IfoCardDetails'\r\nimport IfoCardContribute from './IfoCardContribute'\r\nimport IfoCardProgress from './IfoCardProgress'\r\nimport IfoCardTime from './IfoCardTime'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport interface IfoCardProps {\r\n  ifo: Ifo\r\n}\r\n\r\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 437px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledProgress = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst ActionWrapper = styled.div`\r\n  margin-top: 12px;\r\n`\r\n\r\nconst StyledLinearProgress = withStyles({\r\n  barColorPrimary: {\r\n    backgroundColor: '#5f696e',\r\n  },\r\n  bar2Buffer: {\r\n    backgroundColor: '#b0bec5',\r\n  },\r\n  dashedColorPrimary: {\r\n    backgroundImage: `radial-gradient(#b0bec5 0%, #97a4ab 16%, transparent 42%);`,\r\n  },\r\n  root: {\r\n    borderRadius: 5,\r\n    height: 14,\r\n    padding: '0 20px',\r\n  },\r\n})(LinearProgress)\r\n\r\nconst getStatus = (currentTime: number, startTime: number, endTime: number): IfoStatus | null => {\r\n  if (currentTime < startTime) {\r\n    return 'coming_soon'\r\n  }\r\n\r\n  if (currentTime >= startTime && currentTime <= endTime) {\r\n    return 'live'\r\n  }\r\n\r\n  if (currentTime > endTime) {\r\n    return 'finished'\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\r\n  if (status === 'coming_soon') {\r\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\r\n  }\r\n\r\n  if (status === 'live') {\r\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\r\n  const {\r\n    id,\r\n    name,\r\n    subTitle,\r\n    description,\r\n    saleAmount,\r\n    raiseAmount,\r\n    projectSiteUrl,\r\n    currencyAddress,\r\n    tokenDecimals,\r\n    currency,\r\n    maxContribution,\r\n    minContribution,\r\n    token,\r\n  } = ifo\r\n\r\n  const [state, setState] = useState({\r\n    blocksRemaining: 0,\r\n    endBlockNum: 0,\r\n    hardCap: new BigNumber(0),\r\n    hardCapProgress: 0,\r\n    isLoading: true,\r\n    isOpen: null,\r\n    progress: 0,\r\n    secondsUntilEnd: 0,\r\n    secondsUntilStart: 0,\r\n    softCap: new BigNumber(0),\r\n    softCapProgress: 0,\r\n    startBlockNum: 0,\r\n    status: null,\r\n    tokensPerBnb: new BigNumber(0),\r\n    weiRaised: new BigNumber(0),\r\n    softCapReached: false,\r\n    finalized: false,\r\n  })\r\n  const { account } = useWallet()\r\n  const presaleContract = useIdoContract(ifo.address[CHAIN_ID])\r\n\r\n  const currentBlock = useBlock()\r\n  const TranslateString = useI18n()\r\n\r\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\r\n\r\n  useEffect(() => {\r\n    const fetchProgress = async () => {\r\n      const [\r\n        startTime,\r\n        endTime,\r\n        softCap,\r\n        hardCap,\r\n        tokensPerBnb,\r\n        weiRaised,\r\n        isOpen,\r\n        softCapReached,\r\n        finalized,\r\n      ] = await Promise.all([\r\n        presaleContract.methods.startTime().call(),\r\n        presaleContract.methods.endTime().call(),\r\n        presaleContract.methods.softCap().call(),\r\n        presaleContract.methods.hardCap().call(),\r\n        presaleContract.methods.tokensPerBnb().call(),\r\n        presaleContract.methods.weiRaised().call(),\r\n        presaleContract.methods.isOpen().call(),\r\n        presaleContract.methods.softCapReached().call(),\r\n        presaleContract.methods.finalized().call(),\r\n      ])\r\n\r\n      const softCapProgress = (weiRaised / softCap) * 100\r\n      const hardCapProgress = (weiRaised / hardCap) * 100\r\n\r\n      const startBlockNum = parseInt(startTime, 10)\r\n      const endBlockNum = parseInt(endTime, 10)\r\n      const blocksRemaining = endBlockNum - currentBlock\r\n\r\n      const currentTime = Math.round(Date.now() / 1000)\r\n\r\n      // const status = getStatus(currentBlock, startBlockNum, endBlockNum)\r\n      const status = getStatus(currentTime, startTime, endTime)\r\n\r\n      // Calculate the total progress until finished or until start\r\n      const progress =\r\n        currentTime > startTime\r\n          ? ((currentTime - startTime) / (endTime - startTime)) * 100\r\n          : ((currentTime - endTime) / (startTime - endTime)) * 100\r\n\r\n      setState({\r\n        blocksRemaining,\r\n        endBlockNum,\r\n        hardCap,\r\n        hardCapProgress: hardCapProgress > 100 ? 100 : hardCapProgress,\r\n        isLoading: false,\r\n        isOpen,\r\n        progress,\r\n        secondsUntilEnd: endTime - currentTime,\r\n        secondsUntilStart: startTime - currentTime,\r\n        softCap,\r\n        softCapProgress: softCapProgress > 100 ? 100 : softCapProgress,\r\n        startBlockNum,\r\n        status,\r\n        tokensPerBnb,\r\n        weiRaised,\r\n        softCapReached,\r\n        finalized,\r\n      })\r\n    }\r\n\r\n    fetchProgress()\r\n  }, [currentBlock, presaleContract, setState])\r\n\r\n  const isActive = state.status === 'live'\r\n  const isFinished = state.status === 'finished' || state.finalized\r\n\r\n  return (\r\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\r\n      <CardBody>\r\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\r\n        <IfoCardProgress progress={state.progress} />\r\n        <IfoCardTime\r\n          isLoading={state.isLoading}\r\n          status={state.status}\r\n          secondsUntilStart={state.secondsUntilStart}\r\n          secondsUntilEnd={state.secondsUntilEnd}\r\n          finalized\r\n        />\r\n        {(isActive || isFinished) && (\r\n          <>\r\n            <Flex justifyContent=\"space-between\">\r\n              <Text style={{ fontSize: '16px' }}>Price:</Text>\r\n              <Text bold style={{ fontSize: '16px' }}>\r\n                1 BNB = {`${new BigNumber(state.tokensPerBnb).div(10 ** tokenDecimals)}`} {ifo.token}\r\n              </Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\">\r\n              <Text style={{ fontSize: '16px' }}>BNB raised:</Text>\r\n              <Text bold style={{ fontSize: '16px' }}>\r\n                {getFullDisplayBalance(new BigNumber(state.weiRaised))} BNB\r\n              </Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\">\r\n              <Text style={{ fontSize: '16px' }}>Soft Cap ({getBalanceNumber(state.softCap)} BNB):</Text>\r\n              <Text bold style={{ fontSize: '16px' }}>\r\n                {`${state.softCapProgress.toFixed(2)}%`}\r\n              </Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\">\r\n              <Text style={{ fontSize: '16px' }}>Hard Cap ({getBalanceNumber(state.hardCap)} BNB):</Text>\r\n              <Text bold style={{ fontSize: '16px' }}>\r\n                {`${state.hardCapProgress.toFixed(2)}%`}\r\n              </Text>\r\n            </Flex>\r\n          </>\r\n        )}\r\n        <ActionWrapper>\r\n          {(isActive || !isFinished) && (\r\n            <StyledProgress>\r\n              <StyledLinearProgress\r\n                variant=\"buffer\"\r\n                value={state.hardCapProgress}\r\n                valueBuffer={state.softCapProgress}\r\n              />\r\n            </StyledProgress>\r\n          )}\r\n          {!account && <UnlockButton fullWidth />}\r\n          {(isActive || isFinished) && account && (\r\n            <IfoCardContribute\r\n              address={ifo.address[CHAIN_ID]}\r\n              currency=\"BNB\"\r\n              currencyAddress={currencyAddress}\r\n              contract={presaleContract}\r\n              status={state.status}\r\n              finalized={state.finalized}\r\n              raisingAmount={state.hardCap}\r\n              softCapReached={state.softCapReached}\r\n            />\r\n          )}\r\n        </ActionWrapper>\r\n        <IfoCardDescription description={description} defaultIsOpen={false} />\r\n        <IfoCardDetails\r\n          saleAmount={saleAmount}\r\n          raiseAmount={raiseAmount}\r\n          projectSiteUrl={projectSiteUrl}\r\n          raisingAmount={state.hardCap}\r\n          totalAmount={new BigNumber(state.weiRaised)}\r\n          maxContribution={maxContribution}\r\n          minContribution={minContribution}\r\n          currency={currency}\r\n          token={token}\r\n        />\r\n      </CardBody>\r\n    </StyledIfoCard>\r\n  )\r\n}\r\n\r\nexport default IfoCard\r\n","import styled from 'styled-components'\r\n\r\ninterface IfoCardWrapperProps {\r\n  isSingle?: boolean\r\n}\r\n\r\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\r\n  }\r\n`\r\n\r\nIfoCardWrapper.defaultProps = {\r\n  isSingle: false,\r\n}\r\n\r\nexport default IfoCardWrapper\r\n","import React from 'react'\r\nimport { ifosConfig } from 'config/constants'\r\nimport IfoCard from './components/IfoCard'\r\nimport IfoCards from './components/IfoCards'\r\n\r\n/**\r\n * Note: currently there should be only 1 active IFO at a time\r\n */\r\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\r\n\r\nconst Ifo = () => (\r\n  <IfoCards isSingle>\r\n    <IfoCard ifo={activeIfo} />\r\n  </IfoCards>\r\n)\r\n\r\nexport default Ifo\r\n","import React from 'react'\r\nimport { ifosConfig } from 'config/constants'\r\nimport { Ifo } from 'config/constants/types'\r\nimport IfoCard from './components/IfoCard'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\r\n\r\nconst PastIfo = () => (\r\n  <IfoCards>\r\n    {inactiveIfo.map((ifo) => (\r\n      <IfoCard key={ifo.id} ifo={ifo} />\r\n    ))}\r\n  </IfoCards>\r\n)\r\n\r\nexport default PastIfo\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport Container from 'components/layout/Container'\r\nimport IfoTabButtons from './components/IfoTabButtons'\r\nimport Hero from './components/Hero'\r\nimport CurrentIfo from './CurrentIfo'\r\nimport PastIfo from './PastIfo'\r\n\r\nconst Ifos = () => {\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Container>\r\n        <IfoTabButtons />\r\n        <Route exact path={`${path}`}>\r\n          <CurrentIfo />\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          <PastIfo />\r\n        </Route>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ifos\r\n"],"sourceRoot":""}