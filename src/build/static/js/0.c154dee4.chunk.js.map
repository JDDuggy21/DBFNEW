{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","utils/formatBalance.ts","hooks/useContract.ts","components/UnlockButton.tsx","config/constants/ifo.ts","config/constants/index.ts","hooks/useWeb3.ts"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","useContract","abi","address","contractOptions","web3","useWeb3","useState","eth","Contract","contract","setContract","useEffect","useIdoContract","ido","useERC20","erc20","useCake","getCakeAddress","useLottery","lottery","getLotteryAddress","useMasterchef","masterChef","getMasterChefAddress","useMasterchef3","masterChef3","getMasterChef3Address","useSmartChef","id","config","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","smartChefBnb","sousChef","contractAddress","process","UnlockButton","props","TranslateString","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","ifos","56","97","isActive","name","token","subTitle","description","saleAmount","raiseAmount","projectSiteUrl","currency","currencyAddress","tokenDecimals","maxContribution","minContribution","farmsConfig","filter","farm","isCommunity","map","tokenSymbol","farms3Config","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","ethereum","refEth","useRef","setweb3","current"],"mappings":"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","file":"static/js/0.c154dee4.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getMasterChefAddress,\n  getMasterChef3Address,\n  getCakeAddress,\n  getCake3Address,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n} from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport ido from 'config/abi/ido.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport masterChef3 from 'config/abi/masterchef3.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport smartChefBnb from 'config/abi/sousChefBnb.json'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useIdoContract = (address: string) => {\n  const idoAbi = (ido as unknown) as AbiItem\n  return useContract(idoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useCake3 = () => {\n  return useERC20(getCake3Address())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useMasterchef3 = () => {\n  const abi = (masterChef3 as unknown) as AbiItem\n  return useContract(abi, getMasterChef3Address())\n}\n\nexport const useSmartChef = (id: number) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? smartChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[CHAIN_ID])\n}\n\nexport default useContract\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { Ifo } from './types'\r\n\r\nconst ifos: Ifo[] = [\r\n  {\r\n    id: 'rebasingprotocol',\r\n    address: {\r\n      56: '0xE5A1ab7017b3b01ec6C0b68790f28577c734e2b1',\r\n      97: '0x8E3Be059992dee2a668902EED64bac9Bab134071',\r\n    },\r\n    isActive: false,\r\n    name: 'RebasingProtocol',\r\n    token: 'RBT',\r\n    subTitle: 'Rebasing Protocol is a decentralized and Elastic Supply token based on Binance Smart Chain',\r\n    description:\r\n      'Rebasing Protocol is a decentralized and Elastic Supply token based on Binance Smart Chain. Rebasing Protocol is built on adaptable, fair, safe, and sustainable core values, compatible with Smart Contract. It has novel features such as token burn and add liquidity to pool automatically from a percent of every transaction. Pegged price can be changed as per community once Governance is launched.',\r\n    saleAmount: '5200',\r\n    raiseAmount: '400',\r\n    projectSiteUrl: 'https://rebasing.live',\r\n    currency: 'BNB',\r\n    currencyAddress: '0xDd3F196c59Df7bdABc18BBcfFb6440298AE117e2',\r\n    tokenDecimals: 9,\r\n    maxContribution: '50',\r\n    minContribution: '0.001',\r\n  },\r\n  {\r\n    id: 'momoprotocol',\r\n    address: {\r\n      56: '0x665807C7531810EC676D90639e339e662B363dd0',\r\n      97: '0x8E3Be059992dee2a668902EED64bac9Bab134071',\r\n    },\r\n    isActive: false,\r\n    name: 'MomoProtocol',\r\n    token: 'MOMO',\r\n    subTitle: 'The 1st BSC project that offers Flashloan Arbitrage & Rewards Contributors through our Social App',\r\n    description:\r\n      'MomoProtocol is an online platform for using, sharing, and getting information related to any field of knowledge. It is a website that will contain the questions and answers and all those questions and answers will be rewarded through tokens of the website. MomoProtocol is also going to Launch Flashloan Arbitrage on BSC. Where users will need Momo Tokens to try the Flashloan without any collateral.',\r\n    saleAmount: '730 000',\r\n    raiseAmount: '2000',\r\n    projectSiteUrl: 'https://momoprotocol.finance/#/',\r\n    currency: 'BNB',\r\n    currencyAddress: '0xafb2997fe9a99022e61c7e01b974e0e3d7704b02',\r\n    tokenDecimals: 18,\r\n    maxContribution: '100',\r\n    minContribution: '0.001',\r\n  },\r\n  {\r\n    id: 'coolswap',\r\n    address: {\r\n      56: '0x86e17Aa9D1496F6cde7f8ce0BeF2777995e1AAf2',\r\n      97: '0x8E3Be059992dee2a668902EED64bac9Bab134071',\r\n    },\r\n    isActive: false,\r\n    name: 'CoolSwap.finance',\r\n    token: 'COOL',\r\n    subTitle: ' CoolwSwap is a decentralized exchange running on Binance Smart Chain',\r\n    description: ' CoolwSwap is a decentralized exchange running on Binance Smart Chain',\r\n    saleAmount: '625 000',\r\n    raiseAmount: '500',\r\n    projectSiteUrl: 'https://coolswap.finance/',\r\n    currency: 'BNB',\r\n    currencyAddress: '0xafb2997fe9a99022e61c7e01b974e0e3d7704b02',\r\n    tokenDecimals: 18,\r\n    maxContribution: '100',\r\n    minContribution: '0.1',\r\n  },\r\n  {\r\n    id: 'railoracle',\r\n    address: {\r\n      56: '0x895338334AA1f30CA9442e00aB7E7B2920269170',\r\n      97: '0x8E3Be059992dee2a668902EED64bac9Bab134071',\r\n    },\r\n    isActive: false,\r\n    name: 'Railoracle',\r\n    token: 'RAIL',\r\n    subTitle: 'Railoracle [RAIL] will be an Oracle and Bridge Projekt for multiple Blockchains',\r\n    description: 'Railoracle [RAIL] will be an Oracle and Bridge Projekt for multiple Blockchains',\r\n    saleAmount: '944 520',\r\n    raiseAmount: '3704',\r\n    projectSiteUrl: 'https://www.railoracle.io',\r\n    currency: 'BNB',\r\n    currencyAddress: '0xafb2997fe9a99022e61c7e01b974e0e3d7704b02',\r\n    tokenDecimals: 18,\r\n    maxContribution: '200',\r\n    minContribution: '0.1',\r\n  },\r\n  {\r\n    id: 'digimonswap',\r\n    address: {\r\n      56: '0x08A247931Db82dd3EbB9d152A81461B02c3F4f76',\r\n      97: '0x8E3Be059992dee2a668902EED64bac9Bab134071',\r\n    },\r\n    isActive: false,\r\n    name: 'Digimonswap',\r\n    token: 'Digimonx',\r\n    subTitle:\r\n      'Digimonswap is a decentralized exchange running on the Binance Smart Chain with features that let users stake, farm and earn tokens.',\r\n    description:\r\n      'Digimonswap is a decentralized exchange running on the Binance Smart Chain with features that let users stake, farm and earn tokens.',\r\n    saleAmount: '65 000',\r\n    raiseAmount: '500',\r\n    projectSiteUrl: 'https://Digimonswap.org',\r\n    currency: 'BNB',\r\n    currencyAddress: '0xafb2997fe9a99022e61c7e01b974e0e3d7704b02',\r\n    tokenDecimals: 18,\r\n    maxContribution: '100',\r\n    minContribution: '0.1',\r\n  },\r\n  {\r\n    id: 'dragonballfinance',\r\n    address: {\r\n      56: '0xcCbA5B635F848df728A5F5039cbE997F7c1F45cA',\r\n      97: '0x8E3Be059992dee2a668902EED64bac9Bab134071',\r\n    },\r\n    isActive: false,\r\n    name: 'DragonBallFinance',\r\n    token: 'DBALL',\r\n    subTitle: 'The first Dragonball all in one DeFi platform on BSC network',\r\n    description: 'The first Dragonball all in one DeFi platform on BSC network',\r\n    saleAmount: '250 000',\r\n    raiseAmount: '500',\r\n    projectSiteUrl: 'https://dragonballfinance.org',\r\n    currency: 'BNB',\r\n    currencyAddress: '0xafb2997fe9a99022e61c7e01b974e0e3d7704b02',\r\n    tokenDecimals: 18,\r\n    maxContribution: '100',\r\n    minContribution: '0.1',\r\n  },\r\n  {\r\n    id: 'ozonefinance',\r\n    address: {\r\n      56: '0xdF565B8d18A4286237E14d072b804C48aa83C1A3',\r\n      97: '0x8E3Be059992dee2a668902EED64bac9Bab134071',\r\n    },\r\n    isActive: true,\r\n    name: 'Ozone Finance',\r\n    token: 'OZONE',\r\n    subTitle: 'Yield farms for all earthlings on BSC!',\r\n    description:\r\n      'We are building Yield Farms for all earthlings on Binance Smart Chain. We will be soon expanding our project to Polygon Network and during the launch of Ozone Finance for Polygon, $OZONE Hodlers will received an airdrop on their OZONE wallet address. We are also going to introduce No-Loss Lottery, NFT, and Layered Farming. You can learn more about these three features on our project website',\r\n    saleAmount: '196 000',\r\n    raiseAmount: '350',\r\n    projectSiteUrl: 'https://ozone.finance',\r\n    currency: 'BNB',\r\n    currencyAddress: '0xafb2997fe9a99022e61c7e01b974e0e3d7704b02',\r\n    tokenDecimals: 18,\r\n    maxContribution: '100',\r\n    minContribution: '0.1',\r\n  },\r\n]\r\n\r\nexport default ifos\r\n","import farmsConfig from './farms'\nimport farms3Config from './farms3'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nconst communityFarms3 = farms3Config.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms, farms3Config, communityFarms3 }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n"],"sourceRoot":""}